@model DynamicLinqWebDocs.ViewModels.Property

@{
    var title = "." + Model.Name;

    ViewBag.Title = Model.Class + @title + " Property";
            
    var remarks = String.IsNullOrEmpty(Model.Remarks) ? "No Remarks" : Model.Remarks;
}

<h2>@Html.ActionLink(Model.Class, "Class", "Library", new { className = Model.Class }, null)@title <small>Property</small></h2>

@Html.FormatMarkdown(Model.Description)

@Html.FormatMarkdown("**Namespace**: `{0}`", Model.Namespace)

<h3>Syntax</h3>
@Html.FormatCodeBlock(Model.GenerateCSharpSyntaxCode())

<h4>Property Value</h4>
@Html.FormatMarkdown("Type: `{0}`<br />{1}", Model.ValueType, Model.ValueTypeDescription)

@Html.DisplayFor(x => x.Remarks, "Remarks")
@Html.DisplayFor(x => x.Examples, "Examples")

<h3>Supported in NET Framework <br /><small>@Helpers.GetEnumDescription(Model.Frameworks)</small></h3>
